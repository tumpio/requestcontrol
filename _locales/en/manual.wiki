= Request Control Manual =

== Request Control Rule ==

Request Control Rule consists of [[#pattern|Pattern]], [[#types|Types]] and [[#action|Action]].

Requests that match a pattern and types of an active rule will be intercepted taking the action of the rule.

=== Pattern ===

Pattern filters matched requests by [[#scheme|Scheme]], [[#host|Host]] and [[#path|Path]].

==== Scheme ====

Supported schemes are <code>http</code> and <code>https</code>.

{|
| <code>http</code>
| Match a http scheme.
|-
| <code>https</code>
| Match a https scheme.
|-
| <code>http/https</code>
| Match both http and https schemes.
|}

==== Host ====

Host pattern may match the host of the request URL in following ways:

{|
| <code>www.example.com</code>
| Matches a complete host.
|
|-
| <code>*.example.com</code>
| Matches the given host and any of its subdomains.
| Will match example.com and all subdomains of example.com e.g. '''www'''.example.com , '''good'''.example.com
|-
| <code>www.example.*</code>
| Matches the given host and manually listed top-level domains. (can be combined with the subdomain matching)
| Write the top-level domains to the top-level domain name list (e.g. ''com'', ''org'').
|-
| <code>*</code>
| Matches any host.
|
|}

==== Path ====

Path pattern may subsequently contain any combination of &quot;*&quot; wildcard and any of the characters that are allowed in URL path. The &quot;*&quot; wildcard matches any portion of path and it may appear more than once.

Below are examples of using path patterns.

{|
| <code>*</code>
| Matches any path.
|-
| <code>path/a/b/</code>
| Matches the exact path &quot;path/a/b/&quot;.
|-
| <code>*b*</code>
| Matches a path that contains a component &quot;b&quot; somewhere in the middle.
|-
|
| Matches an empty path.
|}

=== Types ===

Filter matched requests by the type of request. The type indicates the requested resource. All supported types are listed below.

{|
! Type
! Details
|-
| Document
| Indicates a DOM document at the top-level that is retrieved directly within a browser tab. (main frame)
|-
| Sub document
| Indicates a DOM document that is retrieved inside another DOM document (&lt;iframe&gt; and &lt;frame&gt; elements).
|-
| Stylesheet
| Indicates a stylesheet (for example, &lt;style&gt; elements).
|-
| Script
| Indicates an executable script (such as JavaScript) loaded with &lt;script&gt; element or the Worker API.
|-
| Image
| Indicates an image (for example, &lt;img&gt; elements).
|-
| Object
| Indicates a generic object (&lt;object&gt; and &lt;embed&gt; elements).
|-
| Plugin
| Indicates a request made by a plugin. (object_subrequest)
|-
| XMLHttpRequest
| Indicates a request made by an XMLHttpRequest (xhr) or by Fetch API.
|-
| XSLT
| Indicates an XSLT style sheet transformation for an XML document.
|-
| Ping
| Indicates a ping request triggered by an &lt;a&gt; element using the ping attribute. Only in use if browser.send_pings is enabled.
|-
| Speculative
| Indicates a predictive TCP and/or TLS handshake for a request that browser has determined to be coming soon. Only in use if network.http.speculative-parallel-limit is greater than 0.
|-
| Beacon
| Indicates a [https://developer.mozilla.org/en-US/docs/Web/API/Beacon_API Beacon] request.
|-
| XML DTD
| Indicates a DTD loaded by an XML document.
|-
| Font
| Indicates a font loaded via @font-face rule.
|-
| Media
| Indicates a video or audio load (&lt;video&gt; and &lt;audio&gt; elements).
|-
| WebSocket
| Indicates a [https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API WebSocket] load.
|-
| CSP Report
| Indicates a [https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP Content Security Policy] report.
|-
| Imageset
| Indicates a request to load an &lt;img&gt; (with the srcset attribute) or &lt;picture&gt; element.
|-
| Web Manifest
| Indicates a request to load a Web App Manifest.
|-
| Other
| Indicates a request that is not classified as being any of the above types.
|}

=== Action ===

; [[File:/icons/icon-filter.svg|16px]] Filter
: Skip URL redirection and/or remove URL query parameters.
; [[File:/icons/icon-redirect.svg|16px]] Redirect
: Redirect requests to manually configured redirect URL.
; [[File:/icons/icon-secure.svg|16px]] Secure
: Upgrade non-secure HTTP requests to secure HTTPS.
; [[File:/icons/icon-block.svg|16px]] Block
: Cancel requests before they are made.
; [[File:/icons/icon-whitelist.svg|16px]] Whitelist
: Whitelist and optionally log requests.

== Extra URL Matchers ==

Following matchers extend the matching capabilities of [https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/RequestFilter WebRequest API].

=== Includes and Excludes ===

Filter matched requests by patterns that can be defined as a string with support for wildcards &quot;?&quot; and &quot;*&quot; (where &quot;?&quot; matches any single character and &quot;*&quot; matches zero or more characters), or as a regular expression pattern.

Include and exclude pattern matching is case insensitive as opposed to [[#host|Host]] and [[#path|Path]] which are case sensitive.

Below are examples of using include and exclude patterns:

{|
| <code>login</code>
| Matches URLs containing &quot;login&quot;.
|-
| <code>log?n</code>
| Matches for example URLs containing &quot;login&quot; and &quot;logon&quot;.
|-
| <code>a*b</code>
| Matches URLs where &quot;a&quot; is followed by &quot;b&quot;
|-
| <code>/[?&]a=\d+(&|$)/</code>
| Matches URLs containing parameter &quot;a&quot; with digits as value.
|}

=== Match by origin ===

Filter matched requests by origin of request.

{|
| Any
| Matches requests with any origin
|-
| Same domain
| Matches requests on same domain
|-
| Same origin
| Matches requests on same origin. Adheres to the [https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy Same-origin policy].
|-
| Third party domain
| Matches requests to third party domain
|-
| Third party origin
| Matches requests to third party origin
|}

== Rule priorities ==

# Whitelist rule
# Block rule
# Secure rule
# Redirect rule
# Filter rule

== Trimming URL parameters ==

Filter rule supports URL query parameter trimming. Trimmed URL parameters are defined either as literal strings with support for &quot;*&quot; and &quot;?&quot; wildcards or using regular expression.

Below are examples of using query parameter trimming patterns.

{|
| <code>utm_source</code>
| Trims any &quot;utm_source&quot; parameter
|-
| <code>utm_*</code>
| Trims any parameter starting with &quot;utm_&quot;
|-
| <code>/[0-9]+/</code>
| Trims any parameter containing only digits
|}

=== Invert Trim Option ===

Keeps only parameters that are defined in trimmed parameters list. All other parameters will be removed.

=== Trim All Option ===

Removes all URL query parameters from matched request.

== Redirect using pattern capturing ==

Redirect rule supports redirecting requests to a manually configured URL. The redirect URL may be parametrized using parameter expansion and redirect instructions. Parameter expansion allows to access and manipulate a set of named parameters of the original URL. Redirect instructions can be used to replace named parameters of original request URL (e.g. by instructing requests to redirect to a different port).

Both methods may be combined. Redirect instructions will be parsed and applied first before parameter expansions.

Parameter expansion may also be used within a redirect instruction.

=== Parameter expansion ===

<pre>{parameter}</pre>
Access a named parameter of the original request URL. Available named parameters are listed at the end of this section.

Parameter expansion supports the following string manipulation formats:

==== Substring replacing ====

<pre>{parameter/pattern/replacement}</pre>

Replaces the first matched substring in expanded parameter.

<pre>{parameter//pattern/replacement}</pre>

Replaces all occurrences of matched substring in expanded parameter.

The pattern is written in regular expression. A number of special replacement patterns are supported, including referencing of capture groups which are described below.

{|
| <code>$n</code>
| Inserts the n-th captured group counting from 1.
|-
| <code>$`</code>
| Inserts the portion of the string that precedes the matched substring.
|-
| <code>$'</code>
| Inserts the portion of the string that follows the matched substring.
|-
| <code>$&</code>
| Inserts the matched substring.
|-
| <code>$$</code>
| Inserts a &quot;$&quot;.
|}

==== Substring extraction ====

<pre>{parameter:offset:length}</pre>
Extract a part of the expanded parameter. Offset determines the starting position. It begins from 0 and can be a negative value counting from the end of the string.

==== Decoding and encoding ====

<pre>{parameter|encodingRule}</pre>
Decode or encode an expanded pattern.

{|
| <code>encodeURI</code>
| Encodes a pattern as URI. It does not encode the following characters: &quot;:&quot;, &quot;/&quot;, &quot;;&quot;, and &quot;?&quot;.
|-
| <code>decodeURI</code>
| Decodes an encoded URI.
|-
| <code>encodeURIComponent</code>
| Encodes a pattern as a component of URI. Encodes all special characters reserved for URI.
|-
| <code>decodeURIComponent</code>
| Decodes an encoded URI component.
|-
| <code>encodeBase64</code>
| Encode a pattern as Base64 string.
|-
| <code>decodeBase64</code>
| Decodes an encoded Base64 string.
|}

==== Combining manipulation rules ====

<pre>{parameter(manipulation1)|(manipulation2)...|(manipulationN)}</pre>
String manipulation rules can be chained using a &quot;|&quot; pipe character. The output is the result of manipulations chain.

==== Examples ====

<pre>https://{hostname}/new/path</pre>
Uses the hostname of the original request.

<pre>https://{hostname/([a-z]{2}).*/$1}/new/path</pre>
Captures a part of the hostname of the original request.

<pre>https://{hostname::-3|/\.co/\.com}/new/path</pre>
Uses the hostname of the original request but manipulate its length by three cutting it from the end and replace &quot;.co&quot; with &quot;.com&quot;.

<pre>{search.url|decodeURIComponent}</pre>
Captures &quot;url&quot; search parameter and decodes it.

=== Redirect instruction ===

<pre>[parameter=value]</pre>
Replace a certain part of the original request. Available named URL parameters are listed at the end of this section.

<pre>[parameter={parameter<manipulations>}]</pre>

The value of a redirect instruction can be parametrized using the parameter expansion described above.

==== Examples ====

<pre>[port=8080]</pre>
Redirects the original request to a port 8080.

<pre>[port=8080][hostname=localhost]</pre>
Redirects the original request to a port 8080 of localhost.

<pre>[port=8080][hostname=localhost][hash={pathname}]</pre>
Redirects the original request to a port 8080 of localhost where hash is the original request's path.

=== List of named parameters ===

Names of the supported parameters and their example outputs are listed in the table below.

Example address used as input:

<pre>https://www.example.com:8080/some/path?query=value#hash</pre>
{|
! Name
! Output
|-
| protocol
| <code>https:</code>
|-
| hostname
| <code>www.example.com</code>
|-
| port
| <code>:8080</code>
|-
| pathname
| <code>/some/path</code>
|-
| search
| <code>?query=value</code>
|-
| search.query
| <code>value</code>
|-
| hash
| <code>#hash</code>
|-
| host
| <code>www.example.com:8080</code>
|-
| origin
| <code>https://www.example.com:8080</code>
|-
| href
| <code>https://www.example.com:8080/some/path?query=value#hash</code>
|}

This manual page is build upon the material of the following MDN wiki documents and is licenced under [http://creativecommons.org/licenses/by-sa/2.5/ CC-BY-SA 2.5].

# [https://developer.mozilla.org/en-US/Add-ons/WebExtensions/Match_patterns Match patterns] by [https://developer.mozilla.org/en-US/Add-ons/WebExtensions/Match_patterns$history Mozilla Contributors] is licensed under [http://creativecommons.org/licenses/by-sa/2.5/ CC-BY-SA 2.5].
# [https://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/webRequest/ResourceType webRequest.ResourceType] by [https://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/webRequest/ResourceType$history Mozilla Contributors] is licensed under [http://creativecommons.org/licenses/by-sa/2.5/ CC-BY-SA 2.5].
# [https://developer.mozilla.org/en-US/docs/Web/API/URL URL] by [https://developer.mozilla.org/en-US/docs/Web/API/URL$history Mozilla Contributors] is licensed under [http://creativecommons.org/licenses/by-sa/2.5/ CC-BY-SA 2.5].
